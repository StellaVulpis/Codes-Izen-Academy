-StackOverflowException: 클래스 내부에 자기 자신 클래스를 생성자로 호출할 경우 발생한다.
(예: class cls1 { cls1 c1 = new cls1(); } )

-public class: 무조건 파일명과 클래스 이름이 동일해야함, 즉 파일 당 한개만 만들 수 있음

-클래스의 종류: 

1. 일반 클래스: 사용자가 만든 클래스
public class 클래스명
{
}

2. 추상 클래스: 추상 메소드들을 포함하는 클래스, 객체 생성 불가, 단일 상속 가능(1:1 상속),
추상 클래스 내부에 있는 모든 메소드들의 종류는 추상(abstract 선언) 메소드가 되어야 한다.
abstract class1
{
}

예: abstract class Calendar
    {
      public abstract void method1();
    }
    public class GregorianCalendar extends Calendar
    {
      public void method1()
      {}
    }

3. 인터페이스: 내부에 들어간 모든 메소드가 추상 메소드가 된다; 다중 상속 가능.
abstract 선언할 필요 없이 그냥 넣어주면 자동으로 추상 메소드로 인식됨.

------------------------------------------------------------------------------------------------------------------------
-메소드의 종류:

1. 일반 메소드
public void method()
{
//body
}

2. 추상메소드: 부모클래스로부터 상속받아야 사용가능, 선언만 하고 body가 없음; 기능이 없음.
abstract void method();

-클래스 상속: extends


super: 자식클래스와 부모클래스의 객체의 이름이 같을 경우 구분하기 위해 사용함; 전역/지역 구분하는 this와 비슷함.
super(): 상속받은 부모클래스의 생성자를 호출하는 메소드이다. 반드시 자식클래스의 기본생성자 내부 맨 위에 
선언되어야 한다.

생성자에 매개변수가 있는 경우 넘겨줄 때, 외부 클래스에서 생성자로 호출하면서 동시에 값을 넣어줘야 한다.
class CLASS
{
CLASS(String name, int val)
{
    this.name=name;
    this.val=val;
}
String name; int val;
}
>>>> 
class callCLASS
{
    CLASS cls = new CLASS("TEXT", 250); // >> String name / int val
}


